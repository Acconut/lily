enum Option[A] {
    Some(A)
    None

    define f[A](g: Option[A]) {
    }

    define h[A, B](i: Option[B]) {
    }

    define map[A, B](f: function(A => B) => Option[B]) {
        match self: {
            case Some(s):
                return Some(f(s))
            case None:
                return None
        }
    }
}

None.f(Some(10))
Some(10).f(Some(10))
Some("10").h(Some(10))

Some(10).map(integer::to_s)
Some(true).map{|a| a.to_i()}
